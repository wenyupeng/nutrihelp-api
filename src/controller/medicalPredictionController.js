// Get response message generated by chatbot
// Used by [POST] localhost/api/obesity/predict
const predict = async (req, res) => {
  // Get input string from user
  // Please refer to the AI_Team_Integration.xlsx for detail information about all input fields
  const user_input = req.body;

  try {
    // Validate input data
    const required_keys = [
      "Gender", "Age", "Height", "Weight", 
      "family_history_with_overweight", "FAVC", "FCVC", "NCP", 
      "CAEC", "SMOKE", "CH2O", "SCC", "FAF", "TUE", "CALC", "MTRANS"
    ]
    const received_keys = Object.keys(user_input);
    for (let i=0; i<required_keys.length; i++) {
      let key = required_keys[i];
      if (!received_keys.includes(key)) {
        return res.status(400).json({
          error: "Missing keys in request, can not provide prediction."
        });
      }
    }

    // Send request to API server and get response
    let ai_response = await fetch("http://localhost:8000/ai-model/medical-report/retrieve", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify(user_input)
    });

    let result = await ai_response.json();

    // Validate response data and send corresponding error message
    if (!result.medical_report) {
      return res.status(400).json({
        error: "An error occured when fetching result from AI server: medical_report field not found",
        message: result
      });
    }

    // Return response to user
    return res.status(200).json({
      medical_report: result.medical_report
    });
  } catch (error) {
    console.error("Error logging in: ", error);
    return res.status(500).json({
      error: "Internal server error"
    })
  }
}

module.exports = {
  predict
}